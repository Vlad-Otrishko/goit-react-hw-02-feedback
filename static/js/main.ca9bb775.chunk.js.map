{"version":3,"sources":["components/Statistics/Statistics.module.css","components/SectionTitle/SectionTitle.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Button","name","className","onLeaveFeedback","type","onClick","FeedbackOptions","options","Object","keys","map","el","s","nextId","Statistics","good","neutral","bad","total","positivePercentage","records","SectionTitle","title","children","wrapper","Notification","message","App","state","handleClick","event","setState","previous","target","textContent","this","Math","floor","countTotalFeedback","countPositiveFeedbackPercentage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,cAAgB,kCAAkC,uBAAuB,yCAAyC,0BAA0B,4CAA4C,KAAO,2B,iBCAvPD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,oBCAlED,EAAOC,QAAU,CAAC,eAAe,sCAAsC,kBAAkB,yCAAyC,cAAc,uC,iBCAhJD,EAAOC,QAAU,CAAC,QAAU,gC,iNCUbC,EAPA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,gBACjC,OACE,wBAAQC,KAAK,SAASF,UAAWA,EAAYG,QAASF,EAAtD,SACGF,K,iBCcQK,EAdS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASJ,EAAqB,EAArBA,gBAClC,OACE,mCACGK,OAAOC,KAAKF,GAASG,KAAI,SAAAC,GAAE,OAC1B,cAAC,EAAD,CACEV,KAAMU,EAENT,UAAWU,IAAE,WAAD,OAAYD,IACxBR,gBAAiBA,GAFZU,a,gBCOAC,EAjBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,mBAC7C,OACE,oCACIJ,GAAQC,GAAWC,IACnB,qBAAIf,UAAWU,IAAEQ,QAAjB,UACE,qBAAIlB,UAAWU,IAAC,cAAhB,mBAA0CG,KAC1C,qBAAIb,UAAWU,IAAC,cAAhB,qBAA4CI,KAC5C,qBAAId,UAAWU,IAAC,cAAhB,iBAAwCK,KACxC,qBAAIf,UAAWU,IAAE,wBAAjB,mBAAiDM,KACjD,qBAAIhB,UAAS,UAAKU,IAAE,wBAAP,YAAkCA,IAAE,4BAAjD,iCACuBO,EADvB,c,gBCCGE,EARM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC7B,OACE,0BAASrB,UAAWU,IAAEY,QAAtB,UACE,qBAAItB,UAAaU,IAAEU,MAAnB,cAA4BA,KAC1BC,M,iBCDOE,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oBAAIxB,UAAWU,IAAEc,QAAjB,SAA4BA,KCE1BC,G,kNACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPY,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAMG,OAAOC,YAAcF,EAASF,EAAMG,OAAOC,aAAe,O,wDAIvE,WACE,OAAOC,KAAKP,MAAMb,KAAOoB,KAAKP,MAAMX,IAAMkB,KAAKP,MAAMZ,U,6CAEvD,WACE,OAAOoB,KAAKC,MAAOF,KAAKP,MAAMb,KAAOoB,KAAKG,qBAAwB,O,oBAEpE,WACE,OACE,gCACE,cAAC,EAAD,CAAchB,MAAO,yBAArB,SACE,cAAC,EAAD,CACEf,QAAS4B,KAAKP,MACdzB,gBAAiBgC,KAAKN,gBAG1B,cAAC,EAAD,CAAcP,MAAO,aAArB,SACwB,IAApBa,KAAKP,MAAMb,MACW,IAAvBoB,KAAKP,MAAMZ,SACS,IAAnBmB,KAAKP,MAAMX,IAEX,cAAC,EAAD,CACEF,KAAMoB,KAAKP,MAAMb,KACjBC,QAASmB,KAAKP,MAAMZ,QACpBC,IAAKkB,KAAKP,MAAMX,IAChBC,MAAOiB,KAAKG,qBACZnB,mBAAoBgB,KAAKI,oCAExB,cAAC,EAAD,CAAcb,QAAS,+B,GAxCpBc,IAAMC,YA+CTd,IClDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ca9bb775.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"records\":\"Statistics_records__2pkOa\",\"records__item\":\"Statistics_records__item__xNsoQ\",\"records__item--final\":\"Statistics_records__item--final__24Z2l\",\"records__item--positive\":\"Statistics_records__item--positive__1NK3c\",\"blur\":\"Statistics_blur__2cUD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SectionTitle_wrapper__2tSe1\",\"title\":\"SectionTitle_title__YHU3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button--good\":\"FeedbackOptions_button--good__3mlQa\",\"button--neutral\":\"FeedbackOptions_button--neutral__2_JHR\",\"button--bad\":\"FeedbackOptions_button--bad__1ri2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2DQpn\"};","import React from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ name, className, onLeaveFeedback}) => {\r\n  return (\r\n    <button type=\"button\" className={className } onClick={onLeaveFeedback}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\nimport Button from '../Button/Button'\r\nimport nextId from \"react-id-generator\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback}) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map(el => (\r\n        <Button\r\n          name={el}\r\n          key={nextId()}\r\n          className={s[`button--${el}`]}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback:PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport s from './Statistics.module.css';\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage })=>{\r\n    return (\r\n      <>\r\n        {(good || neutral || bad) && (\r\n          <ul className={s.records}>\r\n            <li className={s[`records__item`]}> Good={good}</li>\r\n            <li className={s[`records__item`]}>Neutral={neutral}</li>\r\n            <li className={s[`records__item`]}>Bad={bad}</li>\r\n            <li className={s[`records__item--final`]}>Total={total}</li>\r\n            <li className={`${s[`records__item--final`]} ${s[`records__item--positive`]}`}>\r\n              Positive Percentage={positivePercentage} %\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}\r\n","import React from 'react';\r\nimport s from './SectionTitle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst SectionTitle = ({ title, children}) => {\r\n  return (\r\n    <section className={s.wrapper}>\r\n      <h2 className = {s.title}> {title}</h2>\r\n      { children}\r\n    </section>\r\n  );\r\n};\r\nexport default SectionTitle;\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <h2 className={s.message}>{ message}</h2>)\r\n}\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","\nimport React from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport Notification from './components/Notification/Notification';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleClick = event => {\n    this.setState(previous => {\n      return {\n        [event.target.textContent]: previous[event.target.textContent] + 1,\n      };\n    });\n  };\n  countTotalFeedback() {\n    return this.state.good + this.state.bad + this.state.neutral;\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n  }\n  render() {\n    return (\n      <div>\n        <SectionTitle title={'Please, leave feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClick}\n          />\n        </SectionTitle>\n        <SectionTitle title={'Statistics'}>\n          { this.state.good !== 0 ||\n           this.state.neutral !== 0 ||\n            this.state.bad !== 0 ?\n              (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (<Notification message={'No feedback given'}/>\n          )}\n        </SectionTitle>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}