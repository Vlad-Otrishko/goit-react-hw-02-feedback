{"version":3,"sources":["components/Statistics/Statistics.module.css","components/SectionTitle/SectionTitle.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Button","name","className","onLeaveFeedback","vote","type","onClick","FeedbackOptions","options","Object","keys","map","el","s","nextId","Statistics","good","neutral","bad","total","positivePercentage","records","SectionTitle","title","children","wrapper","Notification","message","App","state","handleClick","setState","previous","this","Math","floor","countTotalFeedback","countPositiveFeedbackPercentage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,cAAgB,kCAAkC,uBAAuB,yCAAyC,0BAA0B,4CAA4C,KAAO,2B,iBCAvPD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,oBCAlED,EAAOC,QAAU,CAAC,eAAe,sCAAsC,kBAAkB,yCAAyC,cAAc,uC,iBCAhJD,EAAOC,QAAU,CAAC,QAAU,gC,iNCUbC,EAPA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,gBAAgBC,EAAU,EAAVA,KACjD,OACE,wBAAQC,KAAK,SAASH,UAAWA,EAAYI,QAAS,kBAAIH,EAAgBC,IAA1E,SACGH,K,iBCcQM,EAdS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASL,EAAqB,EAArBA,gBAClC,OACE,mCACGM,OAAOC,KAAKF,GAASG,KAAI,SAAAC,GAAE,OAC1B,cAAC,EAAD,CACEX,KAAMW,EAENV,UAAWW,IAAE,WAAD,OAAYD,IACxBT,gBAAiBA,EACjBC,KAAMQ,GAHDE,a,gBCKAC,EAfI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,mBAC7C,OACE,mCACI,qBAAIlB,UAAWW,IAAEQ,QAAjB,UACE,qBAAInB,UAAWW,IAAC,cAAhB,mBAA0CG,KAC1C,qBAAId,UAAWW,IAAC,cAAhB,qBAA4CI,KAC5C,qBAAIf,UAAWW,IAAC,cAAhB,iBAAwCK,KACxC,qBAAIhB,UAAWW,IAAE,wBAAjB,mBAAiDM,KACjD,qBAAIjB,UAAS,UAAKW,IAAE,wBAAP,YAAkCA,IAAE,4BAAjD,iCACuBO,EADvB,c,gBCEGE,EARM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC7B,OACE,0BAAStB,UAAWW,IAAEY,QAAtB,UACE,qBAAIvB,UAAaW,IAAEU,MAAnB,cAA4BA,KAC1BC,M,iBCDOE,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oBAAIzB,UAAWW,IAAEc,QAAjB,SAA4BA,KCE1BC,G,kNACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPY,YAAc,SAAA1B,GACZ,EAAK2B,UAAS,SAAAC,GACZ,OAAO,eACJ5B,EAAO4B,EAAS5B,GAAQ,O,wDAI/B,WACE,OAAO6B,KAAKJ,MAAMb,KAAOiB,KAAKJ,MAAMX,IAAMe,KAAKJ,MAAMZ,U,6CAEvD,WACE,OAAOiB,KAAKC,MAAOF,KAAKJ,MAAMb,KAAOiB,KAAKG,qBAAwB,O,oBAEpE,WACE,OACE,gCACE,cAAC,EAAD,CAAcb,MAAM,yBAApB,SACE,cAAC,EAAD,CACEf,QAASyB,KAAKJ,MACd1B,gBAAiB8B,KAAKH,gBAG1B,cAAC,EAAD,CAAcP,MAAM,aAApB,SACGU,KAAKG,qBACJ,cAAC,EAAD,CACEpB,KAAMiB,KAAKJ,MAAMb,KACjBC,QAASgB,KAAKJ,MAAMZ,QACpBC,IAAKe,KAAKJ,MAAMX,IAChBC,MAAOc,KAAKG,qBACZhB,mBAAoBa,KAAKI,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GAtChBW,IAAMC,YA6CTX,IChDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.646d04d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"records\":\"Statistics_records__2pkOa\",\"records__item\":\"Statistics_records__item__xNsoQ\",\"records__item--final\":\"Statistics_records__item--final__24Z2l\",\"records__item--positive\":\"Statistics_records__item--positive__1NK3c\",\"blur\":\"Statistics_blur__2cUD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SectionTitle_wrapper__2tSe1\",\"title\":\"SectionTitle_title__YHU3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button--good\":\"FeedbackOptions_button--good__3mlQa\",\"button--neutral\":\"FeedbackOptions_button--neutral__2_JHR\",\"button--bad\":\"FeedbackOptions_button--bad__1ri2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2DQpn\"};","import React from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ name, className, onLeaveFeedback,vote}) => {\r\n  return (\r\n    <button type=\"button\" className={className } onClick={()=>onLeaveFeedback(vote)}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  onLeaveFeedback: PropTypes.func,\r\n  vote: PropTypes.string,\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\nimport Button from '../Button/Button'\r\nimport nextId from \"react-id-generator\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback}) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map(el => (\r\n        <Button\r\n          name={el}\r\n          key={nextId()}\r\n          className={s[`button--${el}`]}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n          vote={el}/>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback:PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport s from './Statistics.module.css';\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage })=>{\r\n    return (\r\n      <>\r\n          <ul className={s.records}>\r\n            <li className={s[`records__item`]}> Good={good}</li>\r\n            <li className={s[`records__item`]}>Neutral={neutral}</li>\r\n            <li className={s[`records__item`]}>Bad={bad}</li>\r\n            <li className={s[`records__item--final`]}>Total={total}</li>\r\n            <li className={`${s[`records__item--final`]} ${s[`records__item--positive`]}`}>\r\n              Positive Percentage={positivePercentage} %\r\n            </li>\r\n          </ul>\r\n      </>\r\n    );\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}\r\n","import React from 'react';\r\nimport s from './SectionTitle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst SectionTitle = ({ title, children}) => {\r\n  return (\r\n    <section className={s.wrapper}>\r\n      <h2 className = {s.title}> {title}</h2>\r\n      { children}\r\n    </section>\r\n  );\r\n};\r\nexport default SectionTitle;\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <h2 className={s.message}>{ message}</h2>)\r\n}\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","\nimport React from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport Notification from './components/Notification/Notification';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleClick = vote => {\n    this.setState(previous => {\n      return {\n        [vote]: previous[vote] + 1,\n      };\n    });\n  };\n  countTotalFeedback() {\n    return this.state.good + this.state.bad + this.state.neutral;\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n  }\n  render() {\n    return (\n      <div>\n        <SectionTitle title=\"Please, leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClick}\n          />\n        </SectionTitle>\n        <SectionTitle title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message='No feedback given' />\n          )}\n        </SectionTitle>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}